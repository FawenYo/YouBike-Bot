version: '3.9'

networks:
  database_network:
    driver: bridge
  monitoring_network:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data
  prometheus_data:
    name: prometheus_data
    driver: rclone
    driver_opts:
      remote: 'remote:/youbike/prometheus'
      allow_other: 'true'
      vfs_cache_mode: full
      poll_interval: 0
  loki_data:
    name: loki_data
    driver: rclone
    driver_opts:
      remote: 'remote:/youbike/loki'
      allow_other: 'true'
      vfs_cache_mode: full
      poll_interval: 0
  grafana_data:
    name: grafana_data
    driver: rclone
    driver_opts:
      remote: 'remote:/youbike/grafana'
      allow_other: 'true'
      vfs_cache_mode: full
      poll_interval: 0

services:
  # Database
  postgres:
    image: postgis/postgis:15-3.3
    container_name: postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    environment:
      - POSTGRES_USER=FawenYo
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=youbike
      - PGDATA=/data/pgdata
      - TZ=Asia/Taipei
    secrets:
      - postgres_password
    volumes:
      - ./postgres/.pginfo:/.pginfo
      - postgres_data:/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - database_network

  # Centralized monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - "9090"
    networks:
      - database_network
      - monitoring_network
    depends_on:
      - node-exporter
      - cadvisor
      - postgres-exporter
      - alertmanager

  # System monitoring
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - "9100"
    networks:
      - monitoring_network

  # Container monitoring
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - "8080"
    networks:
      - monitoring_network

  # Database monitoring
  postgres-exporter:
    image: bitnami/postgres-exporter:latest
    container_name: postgres-exporter
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - ./postgres/.pgpass:/.pgpass
    environment:
      - DATA_SOURCE_URI=postgres:5432/youbike?sslmode=disable
      - DATA_SOURCE_USER=FawenYo
      - DATA_SOURCE_PASS_FILE=/.pgpass
    expose:
      - "9187"
    networks:
      - database_network
      - monitoring_network
    depends_on:
      - postgres

  # Log collection
  promtail:
    image: grafana/promtail:2.7.3
    container_name: promtail
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring_network
    depends_on:
      - loki

  # Centralized logging
  loki:
    image: grafana/loki:latest
    container_name: loki
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - ./loki/local-config.yml:/etc/loki/local-config.yml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring_network
    expose:
      - "3100"
    depends_on:
      - alertmanager

  # Alerting
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    expose:
      - "9093"
    networks:
      - monitoring_network

  # Visualization
  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - database_network
      - monitoring_network
    expose:
      - "3000"
    depends_on:
      - prometheus
      - loki
      - postgres

  # Application
  youbike-bot:
    image: fawenyo/ntu_bike:1.1.0
    container_name: youbike-bot
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
        - ./.env:/app/.env
    expose:
      - "8000"
    networks:
      - database_network
      - monitoring_network
    depends_on:
      - postgres
      - loki

  # Reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/tls.crt:/app/cert/tls.crt
      - ./nginx/tls.key:/app/cert/tls.key
    networks:
      - database_network
      - monitoring_network
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - grafana
      - youbike-bot

secrets:
  postgres_password:
    file: ./postgres/.pgpass
